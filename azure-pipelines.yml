trigger:
  branches:
    include:
      - main
      - staging

pool:
  vmImage: 'ubuntu-latest'

variables:
  dockerRegistryServiceConnection: 'registropagpasse'     # Replace with your actual connection
  imageRepository: 'image-pagpasse'                        # Replace with your ACR image name
  containerRegistry: 'registropagpasse.azurecr.io'            # Replace with your ACR login server
  dockerfilePath: 'Dockerfile'

steps:

# Checkout code
- checkout: self

# Build the .JAR with Maven
- task: Maven@3
  displayName: 'Build Java App'
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'package'
    options: '-Dmaven.test.skip=true'

# Tag based on branch
- ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:
  - script: echo "##vso[task.setvariable variable=imageTag]latest"
    displayName: 'Set image tag to latest (production)'

- ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/staging') }}:
  - script: echo "##vso[task.setvariable variable=imageTag]dev"
    displayName: 'Set image tag to dev (staging)'

# Build and Push Docker image to ACR
- task: Docker@2
  displayName: 'Build and Push Docker Image'
  inputs:
    containerRegistry: $(dockerRegistryServiceConnection)
    repository: $(imageRepository)
    command: 'buildAndPush'
    Dockerfile: $(dockerfilePath)
    tags: |
      $(imageTag)
